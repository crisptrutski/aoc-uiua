⊞(↥∩(=0◿4)).⇡5 # me
⊞↥.=0◿4⇡5 # me 2.0

↥⊙≡⇌⇌.⊠↥.=0⇡5 # ><>
¬±⊞×.◿4⇡5 # Edhebi
⍥(≡⇌⍉≃)4↯3_3 0 # chunes
↻≃1⊞↥.<2⇡5 # gifti
≠0⊞+.1_0_0_0_1 # Kumo
⊞↥.1_0_0_0_1 # solson
⊞↥.≃∸∸∸1 # Edhebi 2.0
 ↻¯1⍉↻¯1⬚1↙5_5↯3_3 0 # SonOfWeb practice
 ↥⍉.↻¯1⍜'↙3¬↯5_5 1 # SonOfWeb practice
↥⊃⍉∘↥⊃⇌∘≃↯4_5 0 # SonOfWeb
⊞↥.⋯17 # SonOfWeb 2.0 (after looking at others)
↻¯1_¯1⬚1↙5_5↯3_3 0 # Edhebi having fun
⍜(↙3_3↘1_1)¬↯5_5 1 # chunes having fun
/↥⊂⍥(∶≐=0_4)2⍉.[⍥(⇡5)5] # RomanPro100
↥⍉.↥⇌.⍜⊢¬↯5⊚5 # iFreilicht
↻¯1_¯1⬚0↙5_5↯3_3 1 # Bren077s
⋯[⊙(..17).31] # RomanPro100 2.0
>0×≡⇌⇌.⊞×.⇡5 # Bren077s 2.0
¬⊞×.>0◿4⇡5 # Bren077s 3.0
¬⊞×.±◿4⇡5 # iFreilicht improving previous
⊞↥.≤0○⇡5 # Bren077s 4.0
⊏⋯17⋯17_31 # RomanPro100 3.0
⊏⊢.⋯17_31 # Kumo 2.0
⊞↥.⍘⊚0_4 # Bren077s 5.0
↯⊂.5⋯33080895 # Kumo having fun
=0×⍜⇌⍉.⊞×.⇡5 # zapasite

# any N
¬±⊞×.◿⊙⇡-1. 5 # Azure Flash 
⊞↥.⋯⍜(-1)(ⁿ∶2) 5 # Azure Flash  2.0
⊞↥.⋯+1ⁿ∶2-1 5 # SonOfWeb 
⊏⊢.⋯⊂⊃(+1ⁿ-1∶)(-1ⁿ∶)2 5 # Azure Flash 3.0
⊞↥.⊂⊂,∶1↯-2∶0 5 # Bren077s
⊞↥.⋯+1ⁿ∶2-1 5# Spoony Bard (doesn't work for <= 1)
⊞↥.⍘⊚⊂0-1 5 # Bren077s 2.0
⊞↥.↻1⬚0↙∶1_1 5 # Spoony Bard 2.0
⊞↥.+⇌.=0⇡ 5 # actually reb
⊞↥.¬±↧⇌.⇡ 5 # actually reb 2.0  


≍ [1_1_1_1_1
   1_0_0_0_1
   1_0_0_0_1
   1_0_0_0_1
   1_1_1_1_1]

# SonOfWeb making an image >_<

⊞⊟.⇡ 150
≑≃/(↥⊃(×⊓(<20◿130)(=10◿30))(×⊓(<20◿30)(=10◿120)))
⊞⊟.⇡ 150
↥≑≃(×⊃/(×⊓(>15◿120)(>15◿120))(÷∶1+1⌵-30/+×.-10◿30))


# Fun generalization, zeddd
F! ← ◳1_1(^2/↥⌵)⊞⊟.∶/↥.+0.5-÷2∶⇡.
F!(=) 5
F!(¯-) 5

# Perverse, using a sequence for the binary representation
# Edhebi (cursed)
OuterBits ← +⊃(×⊃(+1ⁿ∶2-∶ⁿ2.)(-1ⁿ∶2))(×⊃(/+ⁿ∶2×+1⇡-2.)(+1ⁿ∶2-1))
↯⊃'⊟.'⋯OuterBits 5

# Joke - right with enough tries (all by Edhebi)
∵⋅'⁅⚂↯5_5 0
# Somehow using random only once o_O
⬚0↯5_5 ⋯⌊×⚂ ⁿ25 2

